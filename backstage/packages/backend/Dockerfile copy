FROM node:18-bullseye-slim as packages

WORKDIR /app
COPY package.json yarn.lock ./
COPY packages packages
COPY plugins ./

RUN find packages \! -name "package.json" -mindepth 2 -maxdepth 2 -exec rm -rf {} \+

FROM node:18-bullseye-slim as build

RUN apt-get update && \
    apt-get install -y --no-install-recommends python3 libsqlite3-dev git g++ build-essential && \
    yarn config set python /usr/bin/python3

USER node
WORKDIR /app

COPY --from=packages --chown=node:node /app .
ENV CYPRESS_INSTALL_BINARY=0
RUN  yarn install --frozen-lockfile  --network-timeout 300000

COPY --chown=node:node . .

RUN yarn --cwd packages/backend build

RUN mkdir packages/backend/dist/skeleton packages/backend/dist/bundle \
    && tar xzf packages/backend/dist/skeleton.tar.gz -C packages/backend/dist/skeleton \
    && tar xzf packages/backend/dist/bundle.tar.gz -C packages/backend/dist/bundle 

FROM node:18-bookworm-slim

RUN apt-get update && \
    apt-get install -y --no-install-recommends curl libsqlite3-dev python3 python3-pip build-essential && \
    yarn config set python /usr/bin/python3

RUN pip3 install mkdocs-techdocs-core==1.3.3 --no-cache-dir

USER node

WORKDIR /app

COPY --from=build --chown=node:node /app/yarn.lock /app/package.json /app/packages/backend/dist/skeleton/ ./

RUN yarn install --frozen-lockfile --production --network-timeout 600000

COPY --from=build --chown=node:node /app/packages/backend/dist/bundle/ ./

COPY --chown=node:node app-config.yaml ./
ENV NODE_ENV production

# EXPOSE 3000
# EXPOSE 7007
CMD ["node", "packages/backend", "--config", "app-config.yaml"]
