{"version":3,"file":"static/main.1c445537.js","mappings":"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","sources":["webpack://app/./src/apis.ts","webpack://app/./src/components/catalog/EntityPage.tsx","webpack://app/./src/components/search/SearchPage.tsx","webpack://app/./src/components/Root/LogoFull.tsx","webpack://app/./src/components/Root/LogoIcon.tsx","webpack://app/./src/components/Root/Root.tsx","webpack://app/./src/theme/color.ts","webpack://app/./src/theme/white.ts","webpack://app/./src/theme/dark.ts","webpack://app/./src/App.tsx","webpack://app/./src/index.tsx"],"sourcesContent":["import {\n  ScmIntegrationsApi,\n  scmIntegrationsApiRef,\n  ScmAuth,\n} from '@backstage/integration-react';\nimport {\n  AnyApiFactory,\n  ApiRef,\n  BackstageIdentityApi,\n  OAuthApi,\n  OpenIdConnectApi,\n  ProfileInfoApi,\n  SessionApi,\n  configApiRef,\n  createApiFactory,\n  createApiRef,\n  discoveryApiRef,\n  githubAuthApiRef,\n  oauthRequestApiRef,\n} from '@backstage/core-plugin-api';\nimport { OAuth2 } from '@backstage/core-app-api';\n\n\nexport const keycloakOIDCAuthApiRef: ApiRef<\nOpenIdConnectApi & ProfileInfoApi & BackstageIdentityApi & SessionApi\n> = createApiRef({\n  id: 'auth.keycloak',\n});\nexport const acmeAuthApiRef: ApiRef<\n  OAuthApi &\n  ProfileInfoApi &\n  BackstageIdentityApi &\n  SessionApi\n  > = createApiRef({\n  id: 'auth.auth0',\n});\n\nexport const apis: AnyApiFactory[] = [\n\n  createApiFactory({\n    api: scmIntegrationsApiRef,\n    deps: { configApi: configApiRef },\n    factory: ({ configApi }) => ScmIntegrationsApi.fromConfig(configApi),\n  }),\n  ScmAuth.createDefaultApiFactory(),\n  createApiFactory({\n    api: keycloakOIDCAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n\n    },\n    factory: ({discoveryApi, oauthRequestApi, configApi}) =>\n      OAuth2.create({\n        discoveryApi,\n        oauthRequestApi,\n        provider: {\n          id: 'keycloak',\n          title: 'Keycloak provider',\n          icon: () => null,\n        },\n        environment: configApi.getOptionalString('auth.environment'),\n        defaultScopes: ['openid', 'profile', 'email'],\n        popupOptions: {\n          size: {\n            height: 250,\n            width: 250,\n\n          },\n        },\n      }),\n      \n  }),\n\n  createApiFactory({\n    api: githubAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OAuth2.create({\n        discoveryApi,\n        oauthRequestApi,\n        provider: {\n          id: 'github',\n          title: 'github',\n          icon: () => null,\n        },\n        defaultScopes: ['openid', 'email', 'profile'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  })  ,\n  createApiFactory({\n    api: acmeAuthApiRef,\n    deps: {\n      discoveryApi: discoveryApiRef,\n      oauthRequestApi: oauthRequestApiRef,\n      configApi: configApiRef,\n    },\n    factory: ({ discoveryApi, oauthRequestApi, configApi }) =>\n      OAuth2.create({\n        discoveryApi,\n        oauthRequestApi,\n        provider: {\n          id: 'auth0',\n          title: 'Synera',\n          icon: () => null,\n        },\n        defaultScopes: ['openid', 'email', 'profile', 'offline_access'],\n        environment: configApi.getOptionalString('auth.environment'),\n      }),\n  })\n];","import React from 'react';\nimport { Button, Grid } from '@material-ui/core';\nimport {\n  EntityApiDefinitionCard,\n  EntityConsumedApisCard,\n  EntityConsumingComponentsCard,\n  EntityHasApisCard,\n  EntityProvidedApisCard,\n  EntityProvidingComponentsCard,\n} from '@backstage/plugin-api-docs';\nimport {\n  EntityAboutCard,\n  EntityDependsOnComponentsCard,\n  EntityDependsOnResourcesCard,\n  EntityHasComponentsCard,\n  EntityHasResourcesCard,\n  EntityHasSubcomponentsCard,\n  EntityHasSystemsCard,\n  EntityLayout,\n  EntityLinksCard,\n  EntitySwitch,\n  EntityOrphanWarning,\n  EntityProcessingErrorsPanel,\n  isComponentType,\n  isKind,\n  hasCatalogProcessingErrors,\n  isOrphan,\n  hasRelationWarnings,\n  EntityRelationWarning,\n} from '@backstage/plugin-catalog';\nimport {\n  isGithubActionsAvailable,\n  EntityGithubActionsContent,\n  EntityRecentGithubActionsRunsCard,\n} from '@backstage-community/plugin-github-actions';\nimport {\n  EntityUserProfileCard,\n  EntityGroupProfileCard,\n  EntityMembersListCard,\n  EntityOwnershipCard,\n} from '@backstage/plugin-org';\nimport { EntityTechdocsContent } from '@backstage/plugin-techdocs';\nimport { EmptyState } from '@backstage/core-components';\nimport {\n  Direction,\n  EntityCatalogGraphCard,\n} from '@backstage/plugin-catalog-graph';\nimport {\n  RELATION_API_CONSUMED_BY,\n  RELATION_API_PROVIDED_BY,\n  RELATION_CONSUMES_API,\n  RELATION_DEPENDENCY_OF,\n  RELATION_DEPENDS_ON,\n  RELATION_HAS_PART,\n  RELATION_PART_OF,\n  RELATION_PROVIDES_API,\n} from '@backstage/catalog-model';\n\nimport { TechDocsAddons } from '@backstage/plugin-techdocs-react';\nimport { ReportIssue } from '@backstage/plugin-techdocs-module-addons-contrib';\nimport { EntitySonarQubeCard } from '@backstage-community/plugin-sonarqube';\n\nconst techdocsContent = (\n  <EntityTechdocsContent>\n    <TechDocsAddons>\n      <ReportIssue />\n    </TechDocsAddons>\n  </EntityTechdocsContent>\n);\n\nconst cicdCard = (\n  <EntitySwitch>\n    <EntitySwitch.Case if={isGithubActionsAvailable}>\n      <Grid item sm={6}>\n        <EntityRecentGithubActionsRunsCard limit={4} variant=\"gridItem\" />\n      </Grid>\n    </EntitySwitch.Case>\n  </EntitySwitch>\n);\n\nconst cicdContent = (\n  // This is an example of how you can implement your company's logic in entity page.\n  // You can for example enforce that all components of type 'service' should use GitHubActions\n  <EntitySwitch>\n    <EntitySwitch.Case if={isGithubActionsAvailable}>\n      <EntityGithubActionsContent />\n    </EntitySwitch.Case>\n\n    <EntitySwitch.Case>\n      <EmptyState\n        title=\"No CI/CD available for this entity\"\n        missing=\"info\"\n        description=\"You need to add an annotation to your component if you want to enable CI/CD for it. You can read more about annotations in Backstage by clicking the button below.\"\n        action={\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            href=\"https://backstage.io/docs/features/software-catalog/well-known-annotations\"\n          >\n            Read more\n          </Button>\n        }\n      />\n    </EntitySwitch.Case>\n  </EntitySwitch>\n);\n\nconst entityWarningContent = (\n  <>\n    <EntitySwitch>\n      <EntitySwitch.Case if={isOrphan}>\n        <Grid item xs={12}>\n          <EntityOrphanWarning />\n        </Grid>\n      </EntitySwitch.Case>\n    </EntitySwitch>\n\n    <EntitySwitch>\n      <EntitySwitch.Case if={hasRelationWarnings}>\n        <Grid item xs={12}>\n          <EntityRelationWarning />\n        </Grid>\n      </EntitySwitch.Case>\n    </EntitySwitch>\n    <EntitySwitch>\n      <EntitySwitch.Case if={hasCatalogProcessingErrors}>\n        <Grid item xs={12}>\n          <EntityProcessingErrorsPanel />\n        </Grid>\n      </EntitySwitch.Case>\n    </EntitySwitch>\n  </>\n);\n\nconst overviewContent = (\n  <Grid container spacing={3} alignItems=\"stretch\">\n    {entityWarningContent}\n    <Grid item md={6}>\n      <EntityAboutCard variant=\"gridItem\" />\n    </Grid>\n      <Grid item md={6}>\n        <EntitySonarQubeCard variant=\"gridItem\" />\n      </Grid>\n    {/* <EntitySwitch.Case if={isGithubActionsAvailable}>\n      <Grid item md={6} xs={12}>\n        <EntityRecentGithubActionsRunsCard limit={4} variant=\"gridItem\" />\n      </Grid>\n    </EntitySwitch.Case> */}\n    <Grid item md={6} xs={12}>\n      <EntityCatalogGraphCard variant=\"gridItem\" height={400} />\n    </Grid>\n    <Grid item sm={6}>\n    {cicdCard}\n    </Grid>\n    <Grid item md={4} xs={12}>\n      <EntityLinksCard />\n    </Grid>\n    <Grid item md={8} xs={12}>\n      <EntityHasSubcomponentsCard variant=\"gridItem\" />\n    </Grid>\n  </Grid>\n);\n\nconst serviceEntityPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      {overviewContent}\n    </EntityLayout.Route>\n    <EntityLayout.Route path=\"/ci-cd\" title=\"CI/CD\">\n      {cicdContent}\n    </EntityLayout.Route>\n    <EntityLayout.Route path=\"/api\" title=\"API\">\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <Grid item md={6}>\n          <EntityProvidedApisCard />\n        </Grid>\n        <Grid item md={6}>\n          <EntityConsumedApisCard />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/dependencies\" title=\"Dependencies\">\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <Grid item md={6}>\n          <EntityDependsOnComponentsCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6}>\n          <EntityDependsOnResourcesCard variant=\"gridItem\" />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/docs\" title=\"Docs\">\n      {techdocsContent}\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst websiteEntityPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      {overviewContent}\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/ci-cd\" title=\"CI/CD\">\n      {cicdContent}\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/dependencies\" title=\"Dependencies\">\n      <Grid container spacing={3} alignItems=\"stretch\">\n        <Grid item md={6}>\n          <EntityDependsOnComponentsCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6}>\n          <EntityDependsOnResourcesCard variant=\"gridItem\" />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/docs\" title=\"Docs\">\n      {techdocsContent}\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\n/**\n * NOTE: This page is designed to work on small screens such as mobile devices.\n * This is based on Material UI Grid. If breakpoints are used, each grid item must set the `xs` prop to a column size or to `true`,\n * since this does not default. If no breakpoints are used, the items will equitably share the available space.\n * https://material-ui.com/components/grid/#basic-grid.\n */\n\nconst defaultEntityPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      {overviewContent}\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/docs\" title=\"Docs\">\n      {techdocsContent}\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst componentPage = (\n  <EntitySwitch>\n    <EntitySwitch.Case if={isComponentType('service')}>\n      {serviceEntityPage}\n    </EntitySwitch.Case>\n\n    <EntitySwitch.Case if={isComponentType('website')}>\n      {websiteEntityPage}\n    </EntitySwitch.Case>\n\n    <EntitySwitch.Case>{defaultEntityPage}</EntitySwitch.Case>\n  </EntitySwitch>\n);\n\nconst apiPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      <Grid container spacing={3}>\n        {entityWarningContent}\n        <Grid item md={6}>\n          <EntityAboutCard />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <EntityCatalogGraphCard variant=\"gridItem\" height={400} />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <EntityLinksCard />\n        </Grid>\n        <Grid container item md={12}>\n          <Grid item md={6}>\n            <EntityProvidingComponentsCard />\n          </Grid>\n          <Grid item md={6}>\n            <EntityConsumingComponentsCard />\n          </Grid>\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n\n    <EntityLayout.Route path=\"/definition\" title=\"Definition\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <EntityApiDefinitionCard />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst userPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      <Grid container spacing={3}>\n        {entityWarningContent}\n        <Grid item xs={12} md={6}>\n          <EntityUserProfileCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <EntityOwnershipCard variant=\"gridItem\" />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst groupPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      <Grid container spacing={3}>\n        {entityWarningContent}\n        <Grid item xs={12} md={6}>\n          <EntityGroupProfileCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <EntityOwnershipCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <EntityMembersListCard />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <EntityLinksCard />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst systemPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {entityWarningContent}\n        <Grid item md={6}>\n          <EntityAboutCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <EntityCatalogGraphCard variant=\"gridItem\" height={400} />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <EntityLinksCard />\n        </Grid>\n        <Grid item md={8}>\n          <EntityHasComponentsCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6}>\n          <EntityHasApisCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6}>\n          <EntityHasResourcesCard variant=\"gridItem\" />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n    <EntityLayout.Route path=\"/diagram\" title=\"Diagram\">\n      <EntityCatalogGraphCard\n        variant=\"gridItem\"\n        direction={Direction.TOP_BOTTOM}\n        title=\"System Diagram\"\n        height={700}\n        relations={[\n          RELATION_PART_OF,\n          RELATION_HAS_PART,\n          RELATION_API_CONSUMED_BY,\n          RELATION_API_PROVIDED_BY,\n          RELATION_CONSUMES_API,\n          RELATION_PROVIDES_API,\n          RELATION_DEPENDENCY_OF,\n          RELATION_DEPENDS_ON,\n        ]}\n        unidirectional={false}\n      />\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nconst domainPage = (\n  <EntityLayout>\n    <EntityLayout.Route path=\"/\" title=\"Overview\">\n      <Grid container spacing={3} alignItems=\"stretch\">\n        {entityWarningContent}\n        <Grid item md={6}>\n          <EntityAboutCard variant=\"gridItem\" />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <EntityCatalogGraphCard variant=\"gridItem\" height={400} />\n        </Grid>\n        <Grid item md={6}>\n          <EntityHasSystemsCard variant=\"gridItem\" />\n        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n\nexport const entityPage = (\n  <EntitySwitch>\n    <EntitySwitch.Case if={isKind('component')} children={componentPage} />\n    <EntitySwitch.Case if={isKind('api')} children={apiPage} />\n    <EntitySwitch.Case if={isKind('group')} children={groupPage} />\n    <EntitySwitch.Case if={isKind('user')} children={userPage} />\n    <EntitySwitch.Case if={isKind('system')} children={systemPage} />\n    <EntitySwitch.Case if={isKind('domain')} children={domainPage} />\n\n    <EntitySwitch.Case>{defaultEntityPage}</EntitySwitch.Case>\n  </EntitySwitch>\n);\n","import React from 'react';\nimport { makeStyles, Theme, Grid, Paper } from '@material-ui/core';\n\nimport { CatalogSearchResultListItem } from '@backstage/plugin-catalog';\nimport {\n  catalogApiRef,\n  CATALOG_FILTER_EXISTS,\n} from '@backstage/plugin-catalog-react';\nimport { TechDocsSearchResultListItem } from '@backstage/plugin-techdocs';\n\nimport { SearchType } from '@backstage/plugin-search';\nimport {\n  SearchBar,\n  SearchFilter,\n  SearchResult,\n  SearchPagination,\n  useSearch,\n} from '@backstage/plugin-search-react';\nimport {\n  CatalogIcon,\n  Content,\n  DocsIcon,\n  Header,\n  Page,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  bar: {\n    padding: theme.spacing(1, 0),\n  },\n  filters: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  filter: {\n    '& + &': {\n      marginTop: theme.spacing(2.5),\n    },\n  },\n}));\n\nconst SearchPage = () => {\n  const classes = useStyles();\n  const { types } = useSearch();\n  const catalogApi = useApi(catalogApiRef);\n\n  return (\n    <Page themeId=\"home\">\n      <Header title=\"Search\" />\n      <Content>\n        <Grid container direction=\"row\">\n          <Grid item xs={12}>\n            <Paper className={classes.bar}>\n              <SearchBar />\n            </Paper>\n          </Grid>\n          <Grid item xs={3}>\n            <SearchType.Accordion\n              name=\"Result Type\"\n              defaultValue=\"software-catalog\"\n              types={[\n                {\n                  value: 'software-catalog',\n                  name: 'Software Catalog',\n                  icon: <CatalogIcon />,\n                },\n                {\n                  value: 'techdocs',\n                  name: 'Documentation',\n                  icon: <DocsIcon />,\n                },\n              ]}\n            />\n            <Paper className={classes.filters}>\n              {types.includes('techdocs') && (\n                <SearchFilter.Select\n                  className={classes.filter}\n                  label=\"Entity\"\n                  name=\"name\"\n                  values={async () => {\n                    // Return a list of entities which are documented.\n                    const { items } = await catalogApi.getEntities({\n                      fields: ['metadata.name'],\n                      filter: {\n                        'metadata.annotations.backstage.io/techdocs-ref':\n                          CATALOG_FILTER_EXISTS,\n                      },\n                    });\n\n                    const names = items.map(entity => entity.metadata.name);\n                    names.sort();\n                    return names;\n                  }}\n                />\n              )}\n              <SearchFilter.Select\n                className={classes.filter}\n                label=\"Kind\"\n                name=\"kind\"\n                values={['Component', 'Template']}\n              />\n              <SearchFilter.Checkbox\n                className={classes.filter}\n                label=\"Lifecycle\"\n                name=\"lifecycle\"\n                values={['experimental', 'production']}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={9}>\n            <SearchPagination />\n            <SearchResult>\n              <CatalogSearchResultListItem icon={<CatalogIcon />} />\n              <TechDocsSearchResultListItem icon={<DocsIcon />} />\n            </SearchResult>\n          </Grid>\n        </Grid>\n      </Content>\n    </Page>\n  );\n};\n\nexport const searchPage = <SearchPage />;\n","import React from 'react';\nimport MyLogo from './logo/synera-logo-comprido-branco-768x192.png';\n\n\nconst LogoFull = () => {\n  return <img height={50} src={MyLogo} />;\n}\n\n\nexport default LogoFull;\n","import React from 'react';\nimport MyLogo from './logo/logo-normal-branco-150x150.png';\n\nconst LogoIcon = () => {\n  return <img height={40} src={MyLogo} />;\n};\n\n\nexport default LogoIcon;\n","import React, { PropsWithChildren } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport MapIcon from '@material-ui/icons/MyLocation';\nimport LibraryBooks from '@material-ui/icons/LibraryBooks';\nimport CreateComponentIcon from '@material-ui/icons/AddCircleOutline';\nimport LogoFull from './LogoFull';\nimport LogoIcon from './LogoIcon';\nimport {\n  Settings as SidebarSettings,\n  UserSettingsSignInAvatar,\n} from '@backstage/plugin-user-settings';\nimport { SidebarSearchModal } from '@backstage/plugin-search';\nimport {\n  Sidebar,\n  sidebarConfig,\n  SidebarDivider,\n  SidebarGroup,\n  SidebarItem,\n  SidebarPage,\n  SidebarScrollWrapper,\n  SidebarSpace,\n  useSidebarOpenState,\n  Link,\n} from '@backstage/core-components';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useSidebarLogoStyles = makeStyles({\n  root: {\n    width: sidebarConfig.drawerWidthClosed,\n    height: 3 * sidebarConfig.logoHeight,\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    alignItems: 'center',\n    marginBottom: -14,\n  },\n  link: {\n    width: sidebarConfig.drawerWidthClosed,\n    marginLeft: 24,\n  },\n});\n\nconst SidebarLogo = () => {\n  const classes = useSidebarLogoStyles();\n  const { isOpen } = useSidebarOpenState();\n\n  return (\n    <div className={classes.root}>\n      <Link to=\"/\" underline=\"none\" className={classes.link} aria-label=\"Home\">\n        {isOpen ? <LogoFull /> : <LogoIcon />}\n      </Link>\n    </div>\n  );\n};\n\nexport const Root = ({ children }: PropsWithChildren<{}>) => (\n  <SidebarPage>\n    <Sidebar>\n      <SidebarLogo />\n      <SidebarGroup label=\"Search\" icon={<SearchIcon />} to=\"/search\">\n        <SidebarSearchModal />\n      </SidebarGroup>\n      <SidebarDivider />\n      <SidebarGroup label=\"Menu\" icon={<MenuIcon />}>\n        {/* Global nav, not org-specific */}\n        <SidebarItem icon={HomeIcon} to=\"catalog\" text=\"Home\" />\n        <SidebarItem icon={ExtensionIcon} to=\"api-docs\" text=\"APIs\" />\n        <SidebarItem icon={LibraryBooks} to=\"docs\" text=\"Docs\" />\n        <SidebarItem icon={CreateComponentIcon} to=\"create\" text=\"Self Service\" />\n        {/* End global nav */}\n        <SidebarDivider />\n        <SidebarScrollWrapper>\n          <SidebarItem icon={MapIcon} to=\"tech-radar\" text=\"Tech Radar\" />\n        </SidebarScrollWrapper>\n\n      </SidebarGroup>\n      <SidebarSpace />\n      <SidebarDivider />\n      <SidebarGroup\n        label=\"Settings\"\n        icon={<UserSettingsSignInAvatar />}\n        to=\"/settings\"\n      >\n        {/* <SidebarScrollWrapper>\n          <SidebarItem icon={HelpIcon} to=\"support\" text=\"Suporte\" />\n        </SidebarScrollWrapper> */}\n        <SidebarDivider />\n        \n        <SidebarSettings />\n      </SidebarGroup>\n    </Sidebar>\n    {children}\n  </SidebarPage>\n);\n","export enum ThemeColor {\n  BLACK = '#333333',\n  ORANGE = '#FF7300',\n  WHITE = '#DDDDDD',\n}","import {\n  createBaseThemeOptions,\n  createUnifiedTheme,\n  genPageTheme,\n  palettes,\n  shapes,\n} from '@backstage/theme';\n\nimport { ThemeColor } from './color';\n\n\nexport const lightTheme = createUnifiedTheme({\n  ...createBaseThemeOptions({\n    palette: {\n      ...palettes.light,\n      typography: {\n        htmlFontSize: 56,\n        fontFamily: 'Arial, sans-serif',\n        h1: {\n          fontSize: 54,\n          fontWeight: 700,\n          marginBottom: 10,\n        },\n        h2: {\n          fontSize: 40,\n          fontWeight: 700,\n          marginBottom: 8,\n        },\n        h3: {\n          fontSize: 32,\n          fontWeight: 700,\n          marginBottom: 6,\n        },\n        h4: {\n          fontWeight: 700,\n          fontSize: 28,\n          marginBottom: 6,\n        },\n        h5: {\n          fontWeight: 700,\n          fontSize: 24,\n          marginBottom: 4,\n        },\n        h6: {\n          fontWeight: 700,\n          fontSize: 20,\n          marginBottom: 2,\n        },\n      },\n      navigation: {\n        background: ThemeColor.BLACK,\n        indicator: ThemeColor.ORANGE,\n        color: ThemeColor.WHITE,\n        selectedColor: ThemeColor.WHITE,\n      },\n\n    },\n  }),\n  defaultPageTheme: 'home',\n  pageTheme: {\n    home: genPageTheme({\n      colors: [ThemeColor.ORANGE, ThemeColor.BLACK],\n      shape: shapes.wave,\n    }),\n    service: genPageTheme({\n      colors: ['#8c4351', '#343b58'],\n      shape: shapes.wave,\n    }),\n    website: genPageTheme({\n      colors: ['#8c4351', '#343b58'],\n      shape: shapes.wave,\n    }),\n    library: genPageTheme({\n      colors: ['#8c4351', '#343b58'],\n      shape: shapes.wave,\n    }),\n    other: genPageTheme({\n      colors: [ThemeColor.ORANGE, ThemeColor.BLACK],\n      shape: shapes.wave,\n    }),\n  },\n\n});","import {\n  createBaseThemeOptions,\n  createUnifiedTheme,\n  genPageTheme,\n  palettes,\n  shapes,\n} from '@backstage/theme';\nimport { ThemeColor } from './color';\n\n\nexport const darkTheme = createUnifiedTheme({\n  ...createBaseThemeOptions({\n    palette: {\n      ...palettes.dark,\n      navigation: {\n        background: ThemeColor.BLACK,\n        indicator: ThemeColor.ORANGE,\n        color: ThemeColor.WHITE,\n        selectedColor: ThemeColor.WHITE,\n      },\n    },\n  }),\n  defaultPageTheme: 'home',\n  pageTheme: {\n    home: genPageTheme({\n      colors: [ThemeColor.ORANGE, ThemeColor.BLACK],\n      shape: shapes.wave,\n    }),\n    other: genPageTheme({\n      colors: [ThemeColor.ORANGE, ThemeColor.BLACK],\n      shape: shapes.wave,\n    }),\n  },\n  \n});","import React from 'react';\nimport { Navigate, Route } from 'react-router-dom';\nimport { apiDocsPlugin, ApiExplorerPage } from '@backstage/plugin-api-docs';\nimport {\n  CatalogEntityPage,\n  CatalogIndexPage,\n  catalogPlugin,\n} from '@backstage/plugin-catalog';\nimport {\n  CatalogImportPage,\n  catalogImportPlugin,\n} from '@backstage/plugin-catalog-import';\nimport { ScaffolderPage, scaffolderPlugin } from '@backstage/plugin-scaffolder';\nimport { orgPlugin } from '@backstage/plugin-org';\nimport { SearchPage } from '@backstage/plugin-search';\nimport { TechRadarPage } from '@backstage-community/plugin-tech-radar';\nimport {\n  TechDocsIndexPage,\n  techdocsPlugin,\n  TechDocsReaderPage,\n} from '@backstage/plugin-techdocs';\nimport { TechDocsAddons } from '@backstage/plugin-techdocs-react';\nimport { ReportIssue } from '@backstage/plugin-techdocs-module-addons-contrib';\nimport { UserSettingsPage } from '@backstage/plugin-user-settings';\nimport { acmeAuthApiRef, apis } from './apis';\n// import { acmeAuthApiRef, apis, keycloakOIDCAuthApiRef } from './apis';\nimport { entityPage } from './components/catalog/EntityPage';\nimport { searchPage } from './components/search/SearchPage';\nimport { Root } from './components/Root';\n\nimport { AlertDisplay, OAuthRequestDialog, SignInPage } from '@backstage/core-components';\nimport { createApp } from '@backstage/app-defaults';\nimport { AppRouter, FlatRoutes } from '@backstage/core-app-api';\nimport { CatalogGraphPage } from '@backstage/plugin-catalog-graph';\nimport { RequirePermission } from '@backstage/plugin-permission-react';\nimport { catalogEntityCreatePermission } from '@backstage/plugin-catalog-common/alpha';\n\nimport LightIcon from '@material-ui/icons/WbSunny';\nimport DarkIcon from '@material-ui/icons/WbSunny';\n\nimport { lightTheme } from './theme/white';\nimport { darkTheme } from './theme/dark';\nimport { UnifiedThemeProvider } from '@backstage/theme';\nimport { githubAuthApiRef } from '@backstage/core-plugin-api';\n// import { SupportPage } from '@internal/backstage-plugin-support';\n\n\nconst app = createApp({\n  apis,\n  themes: [\n    {\n      id: 'light-theme',\n      title: 'Light',\n      variant: 'light',\n      icon: <LightIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={lightTheme} children={children} />\n      ),\n    },\n    {\n      id: 'dark-theme',\n      title: 'Dark',\n      variant: 'dark',\n      icon: <DarkIcon />,\n      Provider: ({ children }) => (\n        <UnifiedThemeProvider theme={darkTheme} children={children} />\n      ),\n    },\n  ],\n  components: {\n    SignInPage: props => {\n\n      return (\n        <>\n          <SignInPage\n        {...props}\n        auto\n        providers={[{\n          id: 'auth0-auth-provider',\n          title: 'Synera',\n          message: 'Sign in using Google provider',\n          apiRef: acmeAuthApiRef,\n        },\n            {\n          id: 'github-auth-provider',\n          title: 'GitHub',\n          message: 'Sign in using GitHub',\n          apiRef: githubAuthApiRef,\n        }\n      ]}\n        //     {\n    //       id: 'github-auth-provider',\n    //       title: 'GitHub',\n    //       message: 'Sign in using GitHub',\n    //       apiRef: githubAuthApiRef,\n    //     }]\n      /> \n\n          {/* <SignInPage\n            {...props}\n            auto\n            provider={{\n              id: 'keycloak-auth-provider',\n              title: 'keycloak',\n              message: 'Sign In keycloak',\n              apiRef: acmeAuthApiRef,\n            }}\n          /> */}\n\n        </>\n      );\n    },\n    // SignInPage: props => (\n\n    //   <SignInPage\n    //     {...props}\n    //     auto\n    //     providers={[\n    //     //   {\n    //     //   id: 'keycloak-auth-provider',\n    //     //   title: 'keycloak',\n    //     //   message: 'Sign In keycloak',\n    //     //   apiRef: keycloakOIDCAuthApiRef,\n    //     // },\n    //     {\n    //       id: 'github-auth-provider',\n    //       title: 'GitHub',\n    //       message: 'Sign in using GitHub',\n    //       apiRef: githubAuthApiRef,\n    //     }]}\n    //   />\n      \n    // ),\n\n\n  },\n\n  bindRoutes({ bind }) {\n    bind(catalogPlugin.externalRoutes, {\n      createComponent: scaffolderPlugin.routes.root,\n      viewTechDoc: techdocsPlugin.routes.docRoot,\n      createFromTemplate: scaffolderPlugin.routes.selectedTemplate,\n    });\n    bind(apiDocsPlugin.externalRoutes, {\n      registerApi: catalogImportPlugin.routes.importPage,\n    });\n    bind(scaffolderPlugin.externalRoutes, {\n      registerComponent: catalogImportPlugin.routes.importPage,\n      viewTechDoc: techdocsPlugin.routes.docRoot,\n    });\n    bind(orgPlugin.externalRoutes, {\n      catalogIndex: catalogPlugin.routes.catalogIndex,\n    });\n  },\n});\n\nconst routes = (\n  <FlatRoutes>\n    <Route path=\"/\" element={<Navigate to=\"catalog\" />} />\n    <Route path=\"/catalog\" element={<CatalogIndexPage />} />\n    <Route\n      path=\"/catalog/:namespace/:kind/:name\"\n      element={<CatalogEntityPage />}\n    >\n      {entityPage}\n    </Route>\n    <Route path=\"/docs\" element={<TechDocsIndexPage />} />\n    <Route\n      path=\"/docs/:namespace/:kind/:name/*\"\n      element={<TechDocsReaderPage />}\n    >\n      <TechDocsAddons>\n        <ReportIssue />\n      </TechDocsAddons>\n    </Route>\n    <Route path=\"/create\" element={<ScaffolderPage />} />\n    <Route path=\"/api-docs\" element={<ApiExplorerPage />} />\n    <Route\n      path=\"/tech-radar\"\n      element={<TechRadarPage width={1500} height={800} />}\n    />\n    <Route\n      path=\"/catalog-import\"\n      element={\n        <RequirePermission permission={catalogEntityCreatePermission}>\n          <CatalogImportPage />\n        </RequirePermission>\n      }\n    />\n    <Route path=\"/search\" element={<SearchPage />}>\n      {searchPage}\n    </Route>\n    <Route path=\"/settings\" element={<UserSettingsPage />} />\n    <Route path=\"/catalog-graph\" element={<CatalogGraphPage />} />\n\n    {/* <Route path=\"/support\" element={<SupportPage />} /> */}\n  </FlatRoutes>\n);\n\nexport default app.createRoot(\n  <>\n    <AlertDisplay />\n    <OAuthRequestDialog />\n    <AppRouter>\n      <Root>{routes}</Root>\n    </AppRouter>\n  </>,\n);\n","import '@backstage/cli/asset-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')!).render(<App />);\n"],"names":["keycloakOIDCAuthApiRef","createApiRef","id","acmeAuthApiRef","apis","createApiFactory","api","scmIntegrationsApiRef","deps","configApi","configApiRef","factory","ScmIntegrationsApi","fromConfig","ScmAuth","createDefaultApiFactory","discoveryApi","discoveryApiRef","oauthRequestApi","oauthRequestApiRef","OAuth2","create","provider","title","icon","environment","getOptionalString","defaultScopes","popupOptions","size","height","width","githubAuthApiRef","techdocsContent","EntityTechdocsContent","TechDocsAddons","ReportIssue","cicdCard","EntitySwitch","Case","if","isGithubActionsAvailable","Grid","item","sm","EntityRecentGithubActionsRunsCard","limit","variant","cicdContent","EntityGithubActionsContent","EmptyState","missing","description","action","Button","color","href","entityWarningContent","isOrphan","xs","EntityOrphanWarning","hasRelationWarnings","EntityRelationWarning","hasCatalogProcessingErrors","EntityProcessingErrorsPanel","overviewContent","container","spacing","alignItems","md","EntityAboutCard","EntitySonarQubeCard","EntityCatalogGraphCard","EntityLinksCard","EntityHasSubcomponentsCard","serviceEntityPage","EntityLayout","Route","path","EntityProvidedApisCard","EntityConsumedApisCard","EntityDependsOnComponentsCard","EntityDependsOnResourcesCard","websiteEntityPage","defaultEntityPage","componentPage","isComponentType","apiPage","EntityProvidingComponentsCard","EntityConsumingComponentsCard","EntityApiDefinitionCard","userPage","EntityUserProfileCard","EntityOwnershipCard","groupPage","EntityGroupProfileCard","EntityMembersListCard","systemPage","EntityHasComponentsCard","EntityHasApisCard","EntityHasResourcesCard","direction","Direction","TOP_BOTTOM","relations","RELATION_PART_OF","RELATION_HAS_PART","RELATION_API_CONSUMED_BY","RELATION_API_PROVIDED_BY","RELATION_CONSUMES_API","RELATION_PROVIDES_API","RELATION_DEPENDENCY_OF","RELATION_DEPENDS_ON","unidirectional","domainPage","EntityHasSystemsCard","entityPage","isKind","children","useStyles","makeStyles","theme","bar","padding","filters","marginTop","filter","SearchPage","classes","types","useSearch","catalogApi","useApi","catalogApiRef","Page","themeId","Header","Content","Paper","className","SearchBar","SearchType","Accordion","name","defaultValue","value","CatalogIcon","DocsIcon","includes","SearchFilter","Select","label","values","items","getEntities","fields","CATALOG_FILTER_EXISTS","names","map","entity","metadata","sort","Checkbox","SearchPagination","SearchResult","CatalogSearchResultListItem","TechDocsSearchResultListItem","searchPage","img","src","MyLogo","useSidebarLogoStyles","root","sidebarConfig","drawerWidthClosed","logoHeight","display","flexFlow","marginBottom","link","marginLeft","SidebarLogo","isOpen","useSidebarOpenState","div","Link","to","underline","aria-label","LogoFull","LogoIcon","Root","SidebarPage","Sidebar","SidebarGroup","SearchIcon","SidebarSearchModal","SidebarDivider","MenuIcon","SidebarItem","HomeIcon","text","ExtensionIcon","LibraryBooks","CreateComponentIcon","SidebarScrollWrapper","MapIcon","SidebarSpace","UserSettingsSignInAvatar","SidebarSettings","ThemeColor","lightTheme","createUnifiedTheme","createBaseThemeOptions","palette","palettes","light","typography","htmlFontSize","fontFamily","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","navigation","background","BLACK","indicator","ORANGE","WHITE","selectedColor","defaultPageTheme","pageTheme","home","genPageTheme","colors","shape","shapes","wave","service","website","library","other","darkTheme","dark","app","createApp","themes","LightIcon","Provider","UnifiedThemeProvider","DarkIcon","components","SignInPage","props","auto","providers","message","apiRef","bindRoutes","bind","catalogPlugin","externalRoutes","createComponent","scaffolderPlugin","routes","viewTechDoc","techdocsPlugin","docRoot","createFromTemplate","selectedTemplate","apiDocsPlugin","registerApi","catalogImportPlugin","importPage","registerComponent","orgPlugin","catalogIndex","FlatRoutes","element","Navigate","CatalogIndexPage","CatalogEntityPage","TechDocsIndexPage","TechDocsReaderPage","ScaffolderPage","ApiExplorerPage","TechRadarPage","RequirePermission","permission","catalogEntityCreatePermission","CatalogImportPage","UserSettingsPage","CatalogGraphPage","createRoot","AlertDisplay","OAuthRequestDialog","AppRouter","ReactDOM","document","getElementById","render","App"],"sourceRoot":""}