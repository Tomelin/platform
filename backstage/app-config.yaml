app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  endpoints:
    '/snyk':
      target: https://api.snyk.io/
      headers:
        User-Agent: tech-services/backstage-plugin/1.0
        Authorization: token snyk_cs_vJp_GEXC6G9PlPVYY6ExH8V7akbJ90nnhc9rZscMr5U__v1
      pathRewrite:
        "^/proxy/snyk/": "/"
    '/sonarqube':
      target: https://sonarcloud.io/api
      allowedMethods: ['GET']
      auth: "9b85fdd9bdf9afe7096bd7d757b753904f503895:"
        # sonar 9b85fdd9bdf9afe7096bd7d757b753904f503895
        # clientID 5f5f3923-5806-4ba5-96e4-79205b8ea9fa
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true
sonarqube:
    baseUrl: https://sonarcloud.io
    apiKey: 9b85fdd9bdf9afe7096bd7d757b753904f503895
# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local'  # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local'   # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  session:
    secret: backstage
  providers:
    # auth0:
    #   development:
    #     clientId: BMJfomTEGA4Mo3i0hg57qcUBx0WoVsnW
    #     clientSecret: IrACsVGa46zcEF7lFM-466RnnbGk3UQKHxumLWJPC-FK3hZ59tkXj2eZR2HVA3BS
    #     domain: tomelin.us.auth0.com
    #     audience: https://tomelin.us.auth0.com/api/v2/
    keycloak:
      development:
        clientId: backstage
        clientSecret: Q3XY5BpykWvKMwhqUdL3txBXIO9ZL8kA
        authorizationUrl: http://localhost:8080/realms/synera-com-br/protocol/openid-connect/auth
        tokenUrl: http://localhost:8080/realms/synera-com-br/protocol/openid-connect/token
        metadataUrl: http://localhost:8080/realms/synera-com-br
        prompt: auto
        realm: synera-com-br
        claims:
          customClaimName: group

scaffolder: {}
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  processingInterval: { minutes: 1}
  # providers:
  #   keycloakOrg:
  #     default:
  #       baseUrl: http://localhost:8080/auth
  #       loginRealm: synera-com-br
  #       realm: synera-com-br
  #       clientId: backstage
  #       clientSecret: Q3XY5BpykWvKMwhqUdL3txBXIO9ZL8kA
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    - type: file
      target: ./templates/github.yaml

    # Local example template
    # - type: file
    #   target: ../../examples/template/template.yaml
    #   rules:
    #     - allow: [Template]

    # Local example organizational data
    # - type: file
    #   target: ../../examples/org.yaml
    #   rules:
    #     - allow: [User, Group]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]
